WB stage instruction : stall
MEM stage instruction : stall
EX stage instruction : stall
ID stage instruction : stall
IF stage instruction : add $a0 $zero $s1

WB stage instruction : stall
MEM stage instruction : stall
EX stage instruction : stall
ID stage instruction : add $a0 $zero $s1
IF stage instruction : jal 3

WB stage instruction : stall
MEM stage instruction : stall
EX stage instruction : add $a0 $zero $s1
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $zero $s1
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $zero $s1
reg[4] becomes 8
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 2
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999991
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999995] becomes 2
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $a0 0 $sp
mem[0] becomes 8
EX stage instruction : bgtz $a0 3
Branch condition is true  so pc is now 10
ID stage instruction : stall
IF stage instruction : add $a0 $a0 $s0

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $a0 $a0 $s0
IF stage instruction : jal 3

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $a0 $a0 $s0
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $a0 $s0
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $a0 $s0
reg[4] becomes 7
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 12
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999983
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999987] becomes 12
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $a0 0 $sp
mem[9999983] becomes 7
EX stage instruction : bgtz $a0 3
Branch condition is true  so pc is now 10
ID stage instruction : stall
IF stage instruction : add $a0 $a0 $s0

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $a0 $a0 $s0
IF stage instruction : jal 3

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $a0 $a0 $s0
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $a0 $s0
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $a0 $s0
reg[4] becomes 6
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 12
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999975
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999979] becomes 12
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $a0 0 $sp
mem[0] becomes 6
EX stage instruction : bgtz $a0 3
Branch condition is true  so pc is now 10
ID stage instruction : stall
IF stage instruction : add $a0 $a0 $s0

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $a0 $a0 $s0
IF stage instruction : jal 3

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $a0 $a0 $s0
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $a0 $s0
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $a0 $s0
reg[4] becomes 5
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 12
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999967
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999971] becomes 12
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $a0 0 $sp
mem[0] becomes 5
EX stage instruction : bgtz $a0 3
Branch condition is true  so pc is now 10
ID stage instruction : stall
IF stage instruction : add $a0 $a0 $s0

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $a0 $a0 $s0
IF stage instruction : jal 3

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $a0 $a0 $s0
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $a0 $s0
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $a0 $s0
reg[4] becomes 4
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 12
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999959
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999963] becomes 12
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
hit
MEM stage instruction : sw $a0 0 $sp
mem[9999959] becomes 4
EX stage instruction : bgtz $a0 3
Branch condition is true  so pc is now 10
ID stage instruction : stall
IF stage instruction : add $a0 $a0 $s0

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $a0 $a0 $s0
IF stage instruction : jal 3

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $a0 $a0 $s0
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $a0 $s0
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $a0 $s0
reg[4] becomes 3
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 12
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999951
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999955] becomes 12
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
hit
MEM stage instruction : sw $a0 0 $sp
mem[0] becomes 3
EX stage instruction : bgtz $a0 3
Branch condition is true  so pc is now 10
ID stage instruction : stall
IF stage instruction : add $a0 $a0 $s0

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $a0 $a0 $s0
IF stage instruction : jal 3

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $a0 $a0 $s0
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $a0 $s0
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $a0 $s0
reg[4] becomes 2
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 12
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999943
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999947] becomes 12
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
hit
MEM stage instruction : sw $a0 0 $sp
mem[9999943] becomes 2
EX stage instruction : bgtz $a0 3
Branch condition is true  so pc is now 10
ID stage instruction : stall
IF stage instruction : add $a0 $a0 $s0

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $a0 $a0 $s0
IF stage instruction : jal 3

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $a0 $a0 $s0
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $a0 $s0
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $a0 $s0
reg[4] becomes 1
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 12
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999935
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999939] becomes 12
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $a0 0 $sp
mem[0] becomes 1
EX stage instruction : bgtz $a0 3
Branch condition is true  so pc is now 10
ID stage instruction : stall
IF stage instruction : add $a0 $a0 $s0

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $a0 $a0 $s0
IF stage instruction : jal 3

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $a0 $a0 $s0
ID stage instruction : jal 3
Jump to instruction no. : 3
IF stage instruction : add $sp $sp $s2

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $a0 $s0
EX stage instruction : jal 3
ID stage instruction : add $sp $sp $s2
IF stage instruction : sw $ra 4 $sp

WB stage instruction : add $a0 $a0 $s0
reg[4] becomes 0
MEM stage instruction : jal 3
EX stage instruction : add $sp $sp $s2
ID stage instruction : sw $ra 4 $sp
IF stage instruction : sw $a0 0 $sp

WB stage instruction : jal 3
reg[31] becomes 12
MEM stage instruction : add $sp $sp $s2
Forwarding happended
Forwarding happended
EX stage instruction : sw $ra 4 $sp
ID stage instruction : sw $a0 0 $sp
IF stage instruction : bgtz $a0 3

WB stage instruction : add $sp $sp $s2
reg[29] becomes 9999927
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
miss
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $ra 4 $sp
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $ra 4 $sp
mem[9999931] becomes 12
Forwarding happended
EX stage instruction : sw $a0 0 $sp
ID stage instruction : bgtz $a0 3
IF stage instruction : stalling right now

WB stage instruction : sw $ra 4 $sp
miss
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : bgtz $a0 3

WB stage instruction : stall
hit
MEM stage instruction : sw $a0 0 $sp
mem[0] becomes 0
EX stage instruction : bgtz $a0 3
ID stage instruction : stall
IF stage instruction : add $v0 $zero $zero

WB stage instruction : sw $a0 0 $sp
MEM stage instruction : bgtz $a0 3
EX stage instruction : stall
ID stage instruction : add $v0 $zero $zero
IF stage instruction : sub $sp $sp $s2

WB stage instruction : bgtz $a0 3
MEM stage instruction : stall
EX stage instruction : add $v0 $zero $zero
ID stage instruction : sub $sp $sp $s2
IF stage instruction : jr $ra

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $v0 $zero $zero
EX stage instruction : sub $sp $sp $s2
ID stage instruction : jr $ra
Jump to instruction no. : 12
IF stage instruction : lw $a0 0 $sp

WB stage instruction : add $v0 $zero $zero
reg[2] becomes 0
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : jr $ra
ID stage instruction : lw $a0 0 $sp
IF stage instruction : lw $ra 4 $sp

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999935
MEM stage instruction : jr $ra
Forwarding happended
EX stage instruction : lw $a0 0 $sp
ID stage instruction : lw $ra 4 $sp
IF stage instruction : sub $sp $sp $s2

WB stage instruction : jr $ra
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
hit
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : lw $a0 0 $sp
reg[4] becomes 0
miss
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
hit
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : jr $ra

WB stage instruction : lw $ra 4 $sp
reg[31] becomes 12
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : add $v0 $a0 $v0
ID stage instruction : jr $ra
Jump to instruction no. : 12
IF stage instruction : lw $a0 0 $sp

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999943
MEM stage instruction : add $v0 $a0 $v0
EX stage instruction : jr $ra
ID stage instruction : lw $a0 0 $sp
IF stage instruction : lw $ra 4 $sp

WB stage instruction : add $v0 $a0 $v0
reg[2] becomes 0
MEM stage instruction : jr $ra
EX stage instruction : lw $a0 0 $sp
ID stage instruction : lw $ra 4 $sp
IF stage instruction : sub $sp $sp $s2

WB stage instruction : jr $ra
hit
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : lw $a0 0 $sp
reg[4] becomes 2
miss
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
miss
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
hit
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : jr $ra

WB stage instruction : lw $ra 4 $sp
reg[31] becomes 12
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : add $v0 $a0 $v0
ID stage instruction : jr $ra
Jump to instruction no. : 12
IF stage instruction : lw $a0 0 $sp

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999951
MEM stage instruction : add $v0 $a0 $v0
EX stage instruction : jr $ra
ID stage instruction : lw $a0 0 $sp
IF stage instruction : lw $ra 4 $sp

WB stage instruction : add $v0 $a0 $v0
reg[2] becomes 2
MEM stage instruction : jr $ra
EX stage instruction : lw $a0 0 $sp
ID stage instruction : lw $ra 4 $sp
IF stage instruction : sub $sp $sp $s2

WB stage instruction : jr $ra
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
hit
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : lw $a0 0 $sp
reg[4] becomes 0
hit
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : jr $ra

WB stage instruction : lw $ra 4 $sp
reg[31] becomes 12
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : add $v0 $a0 $v0
ID stage instruction : jr $ra
Jump to instruction no. : 12
IF stage instruction : lw $a0 0 $sp

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999959
MEM stage instruction : add $v0 $a0 $v0
EX stage instruction : jr $ra
ID stage instruction : lw $a0 0 $sp
IF stage instruction : lw $ra 4 $sp

WB stage instruction : add $v0 $a0 $v0
reg[2] becomes 2
MEM stage instruction : jr $ra
EX stage instruction : lw $a0 0 $sp
ID stage instruction : lw $ra 4 $sp
IF stage instruction : sub $sp $sp $s2

WB stage instruction : jr $ra
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
hit
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : lw $a0 0 $sp
reg[4] becomes 4
hit
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : jr $ra

WB stage instruction : lw $ra 4 $sp
reg[31] becomes 12
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : add $v0 $a0 $v0
ID stage instruction : jr $ra
Jump to instruction no. : 12
IF stage instruction : lw $a0 0 $sp

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999967
MEM stage instruction : add $v0 $a0 $v0
EX stage instruction : jr $ra
ID stage instruction : lw $a0 0 $sp
IF stage instruction : lw $ra 4 $sp

WB stage instruction : add $v0 $a0 $v0
reg[2] becomes 6
MEM stage instruction : jr $ra
EX stage instruction : lw $a0 0 $sp
ID stage instruction : lw $ra 4 $sp
IF stage instruction : sub $sp $sp $s2

WB stage instruction : jr $ra
hit
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : lw $a0 0 $sp
reg[4] becomes 0
hit
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : jr $ra

WB stage instruction : lw $ra 4 $sp
reg[31] becomes 12
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : add $v0 $a0 $v0
ID stage instruction : jr $ra
Jump to instruction no. : 12
IF stage instruction : lw $a0 0 $sp

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999975
MEM stage instruction : add $v0 $a0 $v0
EX stage instruction : jr $ra
ID stage instruction : lw $a0 0 $sp
IF stage instruction : lw $ra 4 $sp

WB stage instruction : add $v0 $a0 $v0
reg[2] becomes 6
MEM stage instruction : jr $ra
EX stage instruction : lw $a0 0 $sp
ID stage instruction : lw $ra 4 $sp
IF stage instruction : sub $sp $sp $s2

WB stage instruction : jr $ra
hit
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : lw $a0 0 $sp
reg[4] becomes 0
hit
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : jr $ra

WB stage instruction : lw $ra 4 $sp
reg[31] becomes 12
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : add $v0 $a0 $v0
ID stage instruction : jr $ra
Jump to instruction no. : 12
IF stage instruction : lw $a0 0 $sp

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999983
MEM stage instruction : add $v0 $a0 $v0
EX stage instruction : jr $ra
ID stage instruction : lw $a0 0 $sp
IF stage instruction : lw $ra 4 $sp

WB stage instruction : add $v0 $a0 $v0
reg[2] becomes 6
MEM stage instruction : jr $ra
EX stage instruction : lw $a0 0 $sp
ID stage instruction : lw $ra 4 $sp
IF stage instruction : sub $sp $sp $s2

WB stage instruction : jr $ra
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
hit
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : lw $a0 0 $sp
reg[4] becomes 7
miss
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : stall
hit
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : jr $ra

WB stage instruction : lw $ra 4 $sp
reg[31] becomes 12
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : add $v0 $a0 $v0
ID stage instruction : jr $ra
Jump to instruction no. : 12
IF stage instruction : lw $a0 0 $sp

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999991
MEM stage instruction : add $v0 $a0 $v0
EX stage instruction : jr $ra
ID stage instruction : lw $a0 0 $sp
IF stage instruction : lw $ra 4 $sp

WB stage instruction : add $v0 $a0 $v0
reg[2] becomes 13
MEM stage instruction : jr $ra
EX stage instruction : lw $a0 0 $sp
ID stage instruction : lw $ra 4 $sp
IF stage instruction : sub $sp $sp $s2

WB stage instruction : jr $ra
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
miss
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : sub $sp $sp $s2

WB stage instruction : stall
hit
MEM stage instruction : lw $a0 0 $sp
EX stage instruction : lw $ra 4 $sp
ID stage instruction : sub $sp $sp $s2
IF stage instruction : add $v0 $a0 $v0

WB stage instruction : lw $a0 0 $sp
reg[4] becomes 0
hit
MEM stage instruction : lw $ra 4 $sp
EX stage instruction : sub $sp $sp $s2
ID stage instruction : add $v0 $a0 $v0
IF stage instruction : jr $ra

WB stage instruction : lw $ra 4 $sp
reg[31] becomes 2
MEM stage instruction : sub $sp $sp $s2
EX stage instruction : add $v0 $a0 $v0
ID stage instruction : jr $ra
Jump to instruction no. : 2
IF stage instruction : END

WB stage instruction : sub $sp $sp $s2
reg[29] becomes 9999999
MEM stage instruction : add $v0 $a0 $v0
EX stage instruction : jr $ra
ID stage instruction : END
Jump to instruction no. : 17
IF stage instruction : END_INSTRUCTIONS

WB stage instruction : add $v0 $a0 $v0
reg[2] becomes 13
MEM stage instruction : jr $ra
EX stage instruction : END
ID stage instruction : END_INSTRUCTIONS
IF stage instruction : END

WB stage instruction : jr $ra
MEM stage instruction : END
EX stage instruction : END_INSTRUCTIONS
ID stage instruction : END
IF stage instruction : END

WB stage instruction : END
MEM stage instruction : END_INSTRUCTIONS
EX stage instruction : END
ID stage instruction : END
IF stage instruction : END

