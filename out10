WB stage instruction : stall
MEM stage instruction : stall
EX stage instruction : stall
ID stage instruction : stall
IF stage instruction : add $a0 $zero $t0

WB stage instruction : stall
MEM stage instruction : stall
EX stage instruction : stall
ID stage instruction : add $a0 $zero $t0
IF stage instruction : add $a1 $zero $t1

WB stage instruction : stall
MEM stage instruction : stall
EX stage instruction : add $a0 $zero $t0
ID stage instruction : add $a1 $zero $t1
IF stage instruction : jal 4

WB stage instruction : stall
reg[0] becomes 0
MEM stage instruction : add $a0 $zero $t0
EX stage instruction : add $a1 $zero $t1
ID stage instruction : jal 4
Jump to instruction no. : 4
IF stage instruction : add $sp $sp $t2

WB stage instruction : add $a0 $zero $t0
reg[4] becomes 5
MEM stage instruction : add $a1 $zero $t1
EX stage instruction : jal 4
ID stage instruction : add $sp $sp $t2
IF stage instruction : sw $a0 0 $sp 

WB stage instruction : add $a1 $zero $t1
reg[5] becomes 10
MEM stage instruction : jal 4
EX stage instruction : add $sp $sp $t2
ID stage instruction : sw $a0 0 $sp 
IF stage instruction : sw $a1 1 $sp 

WB stage instruction : jal 4
reg[31] becomes 3
MEM stage instruction : add $sp $sp $t2
Forwarding happended
EX stage instruction : sw $a0 0 $sp 
ID stage instruction : sw $a1 1 $sp 
IF stage instruction : sw $ra 2 $sp 

WB stage instruction : add $sp $sp $t2
reg[29] becomes 9999987
miss
MEM stage instruction : sw $a0 0 $sp 
EX stage instruction : sw $a1 1 $sp 
ID stage instruction : sw $ra 2 $sp 
IF stage instruction : sw $ra 2 $sp 

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp 
EX stage instruction : sw $a1 1 $sp 
ID stage instruction : sw $ra 2 $sp 
IF stage instruction : sw $ra 2 $sp 

WB stage instruction : stall
MEM stage instruction : sw $a0 0 $sp 
mem[9999987] becomes 5
EX stage instruction : sw $a1 1 $sp 
ID stage instruction : sw $ra 2 $sp 
IF stage instruction : jal 14

WB stage instruction : sw $a0 0 $sp 
hit
MEM stage instruction : sw $a1 1 $sp 
mem[9999988] becomes 10
EX stage instruction : sw $ra 2 $sp 
ID stage instruction : jal 14
Jump to instruction no. : 14
IF stage instruction : sll $v0 $a0 1

WB stage instruction : sw $a1 1 $sp 
miss
MEM stage instruction : sw $ra 2 $sp 
EX stage instruction : jal 14
ID stage instruction : sll $v0 $a0 1
IF stage instruction : sll $v0 $a0 1

WB stage instruction : stall
MEM stage instruction : sw $ra 2 $sp 
EX stage instruction : jal 14
ID stage instruction : sll $v0 $a0 1
IF stage instruction : sll $v0 $a0 1

WB stage instruction : stall
MEM stage instruction : sw $ra 2 $sp 
mem[9999989] becomes 3
EX stage instruction : jal 14
ID stage instruction : sll $v0 $a0 1
IF stage instruction : jr $ra

WB stage instruction : sw $ra 2 $sp 
MEM stage instruction : jal 14
EX stage instruction : sll $v0 $a0 1
IF stage instruction : jr $ra

WB stage instruction : jal 14
reg[31] becomes 9
MEM stage instruction : sll $v0 $a0 1
Forwarding happended
EX stage instruction : stall
ID stage instruction : jr $ra
Jump to instruction no. : 9
IF stage instruction : lw $a1 1 $sp 

WB stage instruction : sll $v0 $a0 1
reg[2] becomes 10
MEM stage instruction : stall
EX stage instruction : jr $ra
ID stage instruction : lw $a1 1 $sp 
IF stage instruction : lw $ra 2 $sp 

WB stage instruction : stall
MEM stage instruction : jr $ra
EX stage instruction : lw $a1 1 $sp 
ID stage instruction : lw $ra 2 $sp 
IF stage instruction : add $sp $sp $t3

WB stage instruction : jr $ra
miss
MEM stage instruction : lw $a1 1 $sp 
EX stage instruction : lw $ra 2 $sp 
ID stage instruction : add $sp $sp $t3
IF stage instruction : add $sp $sp $t3

WB stage instruction : stall
MEM stage instruction : lw $a1 1 $sp 
EX stage instruction : lw $ra 2 $sp 
ID stage instruction : add $sp $sp $t3
IF stage instruction : add $sp $sp $t3

WB stage instruction : stall
MEM stage instruction : lw $a1 1 $sp 
EX stage instruction : lw $ra 2 $sp 
ID stage instruction : add $sp $sp $t3
IF stage instruction : add $v0 $v0 $a1

WB stage instruction : lw $a1 1 $sp 
reg[5] becomes 10
miss
MEM stage instruction : lw $ra 2 $sp 
EX stage instruction : add $sp $sp $t3
ID stage instruction : add $v0 $v0 $a1
IF stage instruction : add $v0 $v0 $a1

WB stage instruction : stall
MEM stage instruction : lw $ra 2 $sp 
EX stage instruction : add $sp $sp $t3
ID stage instruction : add $v0 $v0 $a1
IF stage instruction : add $v0 $v0 $a1

WB stage instruction : stall
MEM stage instruction : lw $ra 2 $sp 
EX stage instruction : add $sp $sp $t3
ID stage instruction : add $v0 $v0 $a1
IF stage instruction : jr $ra

WB stage instruction : lw $ra 2 $sp 
reg[31] becomes 3
MEM stage instruction : add $sp $sp $t3
EX stage instruction : add $v0 $v0 $a1
ID stage instruction : jr $ra
Jump to instruction no. : 3
IF stage instruction : END

WB stage instruction : add $sp $sp $t3
reg[29] becomes 9999999
MEM stage instruction : add $v0 $v0 $a1
EX stage instruction : jr $ra
ID stage instruction : END
Jump to instruction no. : 17
IF stage instruction : END_INSTRUCTIONS

WB stage instruction : add $v0 $v0 $a1
reg[2] becomes 20
MEM stage instruction : jr $ra
EX stage instruction : END
ID stage instruction : END_INSTRUCTIONS
IF stage instruction : END

WB stage instruction : jr $ra
MEM stage instruction : END
EX stage instruction : END_INSTRUCTIONS
ID stage instruction : END
IF stage instruction : END

WB stage instruction : END
MEM stage instruction : END_INSTRUCTIONS
EX stage instruction : END
ID stage instruction : END
IF stage instruction : END

Number of clock cycles: 29
