note : change the total size of the memory and the memzero variable, mention the fact that wrong instructions are ignored ( check out all the cases of when others !!)

in the case when the mem(i) is not all zero (when we are finding the shift left), we need to take care that the command is valid - for that check the don't care logic for stuff in between for sll, and in the case that funct bits don't match, do null;

Also note that after memmax we have to end the file with the 32 register values

corner cases - 
1. register out of bounds (show that this cannot happen - in the report)
2. accessing negative memory (this can happen)
3. shift and add and subtract for negative numbers / overflow
4. negative register values are allowed too, so memory access instructions can access the code 
5. overwriting a register value
6. limit for no. of instructions
7. limit for no. of mem data

lw $t1, 100($t2)
$t1 <= myarray(100 + $t2 +c)
